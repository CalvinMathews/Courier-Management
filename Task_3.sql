--Task 3: GroupBy, Aggregate Functions, Having, Order By, where

--GroupBy : Categorize the output (each category)
--Agregate functions : count, avg, max, min, sum 
--Having -  Filters data after grouping is done
--Orderby - Asc, Desc
--where - filters before grouping


--14. Find the total number of couriers handled by each employee.

	--1.Need to add employee id to the table 
		ALTER TABLE COURIER ADD EmployeeID int;

	--2.Update the Table data 
		Update Courier set EmployeeId = 1001 WHERE CourierID IN (1,6,7,9,10,15,24,28,29)
		Update Courier set EmployeeId = 1002 WHERE CourierID IN (2,8,11,3,33,16,22,18,30,20,25)
		Update Courier set EmployeeId = 1003 WHERE CourierID IN (35,26,34,32,31,4,27,5,12,13,14,17,19,21,23)

	--3. QUERY
		SELECT EmployeeID,COUNT(*) AS [TOTAL NO OF COURIERS] FROM Courier GROUP BY EmployeeID

--15. Calculate the total revenue generated by each location

		SELECT LocationID, SUM(AMOUNT) AS [TOTAL REVENUE] FROM PAYMENT GROUP BY LocationID

--16. Find the total number of couriers delivered to each location.

		SELECT * FROM COURIER;
		SELECT * FROM Payment
		SELECT * FROM Location
		SELECT P.LocationID ,COUNT(*) AS [COURIERS DELVIERED] FROM PAYMENT AS P JOIN Courier AS C ON P.CourierID=C.CourierID WHERE C.Status ='DELIVERED' GROUP BY P.LOCATIONID 

--17. Find the courier with the highest average delivery time:

		SELECT AVG(DATEDIFF(DAY,P.PAYMENTDATE,C.DELIVERYDATE)) AS [HIGHEST AVERAGE DELIVERY TIME] FROM Payment AS P JOIN Courier AS C ON P.CourierID=C.CourierID ORDER BY AVG(DATEDIFF(DAY,P.PAYMENTDATE,C.DELIVERYDATE))

--18. Find Locations with Total Payments Less Than a Certain Amount

		SELECT LOCATIONID, SUM(AMOUNT) FROM Payment GROUP BY LocationID HAVING SUM(AMOUNT) < 600

--19. Calculate Total Payments per Location
		
		SELECT L.LocationName, P.LocationID, SUM(AMOUNT) AS [TOTAL PAYMENTS] FROM PAYMENT AS P JOIN LOCATION AS L ON P.LocationID = L.LocationID GROUP BY P.LocationID,L.LocationName

		
--20. Retrieve couriers who have received payments totaling more than $1000 in a specific location--(LocationID = X):

		UPDATE Payment SET AMOUNT = 1500 WHERE CourierID =24
		SELECT CourierID , SUM(AMOUNT) AS [TOTAL AMOUNT] FROM PAYMENT GROUP BY CourierID HAVING SUM(AMOUNT) >1000
		
--21. Retrieve couriers who have received payments totaling more than $1000 after a certain date--(PaymentDate > 'YYYY-MM-DD'):

		SELECT CourierID , SUM(AMOUNT) AS [TOTAL AMOUNT], PaymentDate FROM PAYMENT WHERE  CAST(PaymentDate AS date) > '2025-03-17' GROUP BY CourierID, PaymentDate HAVING SUM(AMOUNT) >1000

--22. Retrieve locations where the total amount received is more than $5000 before a certain date--(PaymentDate > 'YYYY-MM-DD')			UPDATE Payment SET AMOUNT = 5500.00 WHERE CourierID =27
		SELECT CourierID , SUM(AMOUNT) AS [TOTAL AMOUNT], PaymentDate FROM PAYMENT WHERE  CAST(PaymentDate AS date) < '2025-03-17' GROUP BY CourierID, PaymentDate HAVING SUM(AMOUNT) >5000

